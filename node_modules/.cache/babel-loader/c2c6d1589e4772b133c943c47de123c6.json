{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\front\\\\src\\\\components\\\\LoginOut.js\";\nimport LoginDialog from \"./LoginDialog\";\nimport Button from \"@material-ui/core/Button\";\nimport UserStore from \"../stores/UserStore\";\n\nclass LoginOut extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch(\"/isLoggedIn\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\"\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.unsername = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch(\"/logout\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\"\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.unsername = \"\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    if (UserStore.isLoggedIn) {\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        disabled: false,\n        onClick: () => this.doLogout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 4\n        }\n      }, \"Logout\");\n    } else {\n      /*#__PURE__*/\n      React.createElement(LoginDialog, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 4\n        }\n      });\n    }\n  }\n\n}\n\nexport default LoginOut;","map":{"version":3,"sources":["D:/react/front/src/components/LoginOut.js"],"names":["LoginDialog","Button","UserStore","LoginOut","React","Component","componentDidMount","res","fetch","method","headers","Accept","result","json","success","loading","isLoggedIn","unsername","username","e","doLogout","console","log","render"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AACA,MAAMC,QAAN,SAAuBC,KAAK,CAACC,SAA7B,CAAuC;AACtC,QAAMC,iBAAN,GAA0B;AACzB,QAAI;AACH,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AACpCC,QAAAA,MAAM,EAAE,MAD4B;AAEpCC,QAAAA,OAAO,EAAE;AACRC,UAAAA,MAAM,EAAE,kBADA;AAER,0BAAgB;AAFR;AAF2B,OAAhB,CAArB;AAOA,UAAIC,MAAM,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;;AACA,UAAID,MAAM,IAAIA,MAAM,CAACE,OAArB,EAA8B;AAC7BZ,QAAAA,SAAS,CAACa,OAAV,GAAoB,KAApB;AACAb,QAAAA,SAAS,CAACc,UAAV,GAAuB,IAAvB;AACAd,QAAAA,SAAS,CAACe,SAAV,GAAsBL,MAAM,CAACM,QAA7B;AACA,OAJD,MAIO;AACNhB,QAAAA,SAAS,CAACa,OAAV,GAAoB,KAApB;AACAb,QAAAA,SAAS,CAACc,UAAV,GAAuB,KAAvB;AACA;AACD,KAjBD,CAiBE,OAAOG,CAAP,EAAU;AACXjB,MAAAA,SAAS,CAACa,OAAV,GAAoB,KAApB;AACAb,MAAAA,SAAS,CAACc,UAAV,GAAuB,KAAvB;AACA;AACD;;AACD,QAAMI,QAAN,GAAiB;AAChB,QAAI;AACH,UAAIb,GAAG,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAY;AAChCC,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,OAAO,EAAE;AACRC,UAAAA,MAAM,EAAE,kBADA;AAER,0BAAgB;AAFR;AAFuB,OAAZ,CAArB;AAOA,UAAIC,MAAM,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;;AACA,UAAID,MAAM,IAAIA,MAAM,CAACE,OAArB,EAA8B;AAC7BZ,QAAAA,SAAS,CAACc,UAAV,GAAuB,KAAvB;AACAd,QAAAA,SAAS,CAACe,SAAV,GAAsB,EAAtB;AACA;AACD,KAbD,CAaE,OAAOE,CAAP,EAAU;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACA;AACD;;AACDI,EAAAA,MAAM,GAAG;AACR,QAAIrB,SAAS,CAACc,UAAd,EAA0B;AACzB;AAAA,0BAAC,MAAD;AACC,QAAA,OAAO,EAAC,UADT;AAEC,QAAA,KAAK,EAAC,SAFP;AAGC,QAAA,QAAQ,EAAE,KAHX;AAIC,QAAA,OAAO,EAAE,MAAM,KAAKI,QAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,KATD,MASO;AACN;AAAA,0BAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACD;;AAvDqC;;AA0DvC,eAAejB,QAAf","sourcesContent":["import LoginDialog from \"./LoginDialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport UserStore from \"../stores/UserStore\";\r\nclass LoginOut extends React.Component {\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tlet res = await fetch(\"/isLoggedIn\", {\r\n\t\t\t\tmethod: \"post\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tlet result = await res.json();\r\n\t\t\tif (result && result.success) {\r\n\t\t\t\tUserStore.loading = false;\r\n\t\t\t\tUserStore.isLoggedIn = true;\r\n\t\t\t\tUserStore.unsername = result.username;\r\n\t\t\t} else {\r\n\t\t\t\tUserStore.loading = false;\r\n\t\t\t\tUserStore.isLoggedIn = false;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tUserStore.loading = false;\r\n\t\t\tUserStore.isLoggedIn = false;\r\n\t\t}\r\n\t}\r\n\tasync doLogout() {\r\n\t\ttry {\r\n\t\t\tlet res = await fetch(\"/logout\", {\r\n\t\t\t\tmethod: \"post\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tlet result = await res.json();\r\n\t\t\tif (result && result.success) {\r\n\t\t\t\tUserStore.isLoggedIn = false;\r\n\t\t\t\tUserStore.unsername = \"\";\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tif (UserStore.isLoggedIn) {\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tdisabled={false}\r\n\t\t\t\tonClick={() => this.doLogout}\r\n\t\t\t>\r\n\t\t\t\tLogout\r\n\t\t\t</Button>;\r\n\t\t} else {\r\n\t\t\t<LoginDialog />;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default LoginOut;\r\n"]},"metadata":{},"sourceType":"module"}