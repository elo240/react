{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\front\\\\src\\\\Forum.js\";\nimport React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport UserStore from \"./stores/UserStore\";\n\nclass Forum extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: [],\n      newpost: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.newpost.trim().length > 4) {\n      this.doSendNewPost();\n    } else {\n      alert(\"New post have to containd minimum of 5 characters\");\n    }\n  }\n\n  async doSendNewPost() {\n    try {\n      let res = await fetch(\"/forum/newpost\", {\n        method: \"post\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userID: UserStore.userID,\n          newpost: this.state.newpost\n        })\n      });\n      let result = await res.json();\n      console.log(result);\n\n      if (result && result.success) {\n        alert(\"Post added correctly\");\n        this.forceUpdate();\n      } else {\n        alert(\"Error, please try again later\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async doRemove(str) {\n    try {\n      let postdata = str.split(\".\");\n      let res = await fetch(\"/forum/remove\", {\n        method: \"post\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          postid: postdata[0],\n          ownerid: postdata[1]\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        alert(\"Post delted\");\n      } else {\n        alert(\"Error, please try again later\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      let res = await fetch(\"/forum/load\", {\n        method: \"post\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        const dbposts = result.body.map(post => {\n          if (UserStore.userID === post.user_id || UserStore.userID === 1) {\n            return /*#__PURE__*/React.createElement(\"tr\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }\n            }, /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }\n            }, post.id), /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }\n            }, post.username), /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 29\n              }\n            }, post.body), /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              onClick: () => this.doRemove(`${post.id}.${post.user_id}`),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }\n            }, \"Delete\")));\n          } else {\n            return /*#__PURE__*/React.createElement(\"tr\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }\n            }, /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }\n            }, post.id), /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }\n            }, post.username), /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }\n            }, post.body), /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }\n            }));\n          }\n        });\n        this.setState({\n          posts: dbposts\n        });\n      } else {\n        alert(\"Couldnt connect please try again later\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"Post\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, \"Mod\"))), this.state.posts, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, UserStore.username), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"newpost\",\n      required: true,\n      onChange: this.handleChange,\n      placeholder: \"Your post\",\n      type: \"textarea\",\n      value: this.state.newpost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default Forum;","map":{"version":3,"sources":["D:/react/front/src/Forum.js"],"names":["React","TextField","Button","UserStore","Forum","Component","constructor","state","posts","newpost","handleChange","bind","handleSubmit","event","target","value","name","setState","preventDefault","trim","length","doSendNewPost","alert","res","fetch","method","headers","body","JSON","stringify","userID","result","json","console","log","success","forceUpdate","e","doRemove","str","postdata","split","postid","ownerid","componentDidMount","dbposts","map","post","user_id","id","username","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport UserStore from \"./stores/UserStore\";\r\nclass Forum extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            posts:[],\r\n            newpost:\"\"\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(event){\r\n        const target = event.target;\r\n\t\tconst value = target.value;\r\n\t\tconst name = target.name;\r\n        this.setState({ [name]: value });\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        if(this.state.newpost.trim().length>4){\r\n            this.doSendNewPost();\r\n        }else{\r\n            alert(\"New post have to containd minimum of 5 characters\")\r\n        }\r\n    }\r\n    async doSendNewPost(){\r\n        try{\r\n            let res= await fetch(\"/forum/newpost\",{\r\n                method: \"post\",\r\n                headers: {\r\n\t\t\t\t\t\"Accept\": \"application/json\",\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},body:JSON.stringify({\r\n                    userID:UserStore.userID,\r\n                    newpost:this.state.newpost\r\n                })\r\n            });\r\n            let result=await res.json();\r\n            console.log(result);\r\n            if(result && result.success){\r\n                alert(\"Post added correctly\");\r\n                this.forceUpdate();\r\n            }else{\r\n                alert(\"Error, please try again later\");\r\n            }\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    async doRemove(str){\r\n        try{\r\n            let postdata=str.split(\".\");\r\n            let res = await fetch(\"/forum/remove\", {\r\n\t\t\t\tmethod: \"post\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Accept\": \"application/json\",\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tpostid:postdata[0],\r\n\t\t\t\t\townerid:postdata[1]\r\n\t\t\t\t}),\r\n            });\r\n            let result= await res.json();\r\n            if(result && result.success){\r\n                alert(\"Post delted\");\r\n            }else{\r\n                alert(\"Error, please try again later\");\r\n            }\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n    async componentDidMount(){\r\n        try{\r\n            let res=await fetch(\"/forum/load\",{\r\n                method: \"post\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Accept\": \"application/json\",\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t}, \r\n            });\r\n            let result=await res.json();\r\n            if(result && result.success){\r\n                const dbposts=result.body.map(post=>{\r\n                    if (UserStore.userID===post.user_id || UserStore.userID===1){\r\n                        return (<tr>\r\n                            <td>{post.id}</td>\r\n                            <td>{post.username}</td>\r\n                            <td>{post.body}</td>\r\n                            <td>\r\n                                <Button onClick={()=>this.doRemove(`${post.id}.${post.user_id}`)} >Delete</Button>\r\n                            </td>\r\n                            </tr>);\r\n                    }else{\r\n                        return (<tr>\r\n                            <td>{post.id}</td>\r\n                            <td>{post.username}</td>\r\n                            <td>{post.body}</td>\r\n                            <td></td>\r\n                            </tr>);\r\n                    }\r\n                })\r\n                this.setState({posts:dbposts});\r\n\r\n            }else{\r\n                alert(\"Couldnt connect please try again later\");\r\n            }\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Author</th>\r\n                        <th>Post</th>\r\n                        <th>Mod</th>\r\n                    </tr>\r\n                    </thead>\r\n                    {this.state.posts}\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>{UserStore.username}</td>\r\n                        <td><TextField name=\"newpost\" required onChange={this.handleChange} placeholder=\"Your post\" type=\"textarea\" value={this.state.newpost} /></td>\r\n                        <td><Button variant=\"outlined\" onClick={this.handleSubmit}>Submit</Button></td>\r\n                </tr>\r\n                </table>\r\n            </div>\r\n        )  \r\n        ;\r\n    }\r\n}\r\nexport default Forum;"]},"metadata":{},"sourceType":"module"}